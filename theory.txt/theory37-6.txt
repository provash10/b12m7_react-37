37-6 (Recap) Load dynamic data, API call using use()
-------------------------------------------------------
User.jsx    Friends.jsx

1. just write a simple fetch with json conversion
2. Wrap the data loading component under suspense

const fetchFriends = () => {

}

=====================

import Users from './Users';
import Batsman from './Batsman';
import Counter from './Counter';
import './App.css'
import { Suspense } from 'react';
import Friends from './Friends';

const fetchUsers = fetch('https://jsonplaceholder.typicode.com/users')
.then((res)=>res.json())

const fetchFriends = async() => {
  const res = await fetch('https://jsonplaceholder.typicode.com/users');
  return res.json();
}

function App() {

  const friendsPromise = fetchFriends();

  function handleClick(){
    alert('I am clicked..')
  }
  function handleClick2(){
    alert('I am clicked 2.')
  }
  
  const handleClick3=()=>{
    alert('Clicked 3 !!!')
  }

  // const handleadd5=(num)=>{
  //   const newNum = num + 5;
  //   alert(newNum);
  // }

   const handleadd6=(num)=>{
    const newNum = num + 13;
    alert(newNum);
  }

  return (
    <>
      <h1>Vite + React</h1>

      <Suspense fallback={<h3>loading....</h3>}>
        <Users fetchUsers={fetchUsers}></Users>
      </Suspense>
      {/* <Users></Users>  suspense ar vitore*/} 

      <Suspense fallback={<h3>Friends Comming....</h3>}>
        <Friends friendsPromise={friendsPromise}></Friends>
      </Suspense>

      <Batsman></Batsman>
      <Counter></Counter>
      

      {/* <button onclick = "handleClick()">Click Me</button> */}
      <button onClick={handleClick}>Click Me</button>
      <button onClick={handleClick2}>Click Me 2</button>
      <button onClick={handleClick3}>Click Me 3</button>
      <button onClick={handleClick}>Click Me 4</button>

      {/* <button onClick={handleadd5(7)}>Click Add 5</button> */}
      <button onClick={()=>handleadd6(27)}>Click Add 6</button> 
    </>
  )
}

export default App


==================Users.jsx

import { use } from "react"

export default function Users({fetchUsers}){

    const users = use(fetchUsers);
    console.log(users); //loading checked ok

    return(
        <div className="card">
        <h3>Users :{users.length} </h3>
        </div>
    )
}

==============Friends.jsx

import { use } from "react"

export default function Friends({friendsPromise}){

    const friends = use(friendsPromise);
    console.log(friends);

    return(
        <div className="card">
            <h3>Friends: {friends.length}</h3>

        </div>
    )
}


